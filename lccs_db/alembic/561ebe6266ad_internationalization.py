"""internationalization

Revision ID: 561ebe6266ad
Revises: 83db828c55ad
Create Date: 2021-08-17 15:56:57.186232

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.orm.session import Session

# revision identifiers, used by Alembic.
revision = '561ebe6266ad'
down_revision = '83db828c55ad'
branch_labels = ()
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    session = Session(bind=op.get_bind())
    session.execute("CREATE EXTENSION hstore;")
    session.commit()

    op.add_column('classification_systems',
                  sa.Column('title_translations', postgresql.HSTORE(text_type=sa.Text()), nullable=True,
                            comment='A human-readable string naming for classification system.'), schema='lccs')
    op.add_column('classification_systems',
                  sa.Column('description_translations', postgresql.HSTORE(text_type=sa.Text()), nullable=True),
                  schema='lccs')

    session.execute("UPDATE lccs.classification_systems SET title_translations = hstore('pt-br', name);")
    session.execute("UPDATE lccs.classification_systems SET description_translations = hstore('pt-br', description);")
    session.commit()

    result = session.execute("""SELECT id, (regexp_split_to_array(name, E'-|\\s+'))[1:10]
                                FROM lccs.classification_systems""")

    for r in result:
        new_name = ''
        for size in range(len(r[1])):
            new_name += str(r[1][size])

        new_name = new_name.replace("'", '"')
        new_name = new_name.replace(" ", '-')
        new_name = new_name.replace("/", '-')
        new_name = new_name.replace("(", '-')
        new_name = new_name.replace(")", '-')

        sql = f"UPDATE lccs.classification_systems AS system SET name = '{new_name.lower()[0:32]}' WHERE system.id = {r[0]};"

        session.execute(sql)
    session.commit()

    op.alter_column('classification_systems', 'name',
                    existing_type=sa.VARCHAR(length=255),
                    type_=sa.String(length=32),
                    comment='Classification System name internally.',
                    existing_nullable=False,
                    schema='lccs')

    op.create_index(op.f('idx_lccs_classification_systems_description_translations'), 'classification_systems',
                    ['description_translations'], unique=False, schema='lccs')
    op.create_index(op.f('idx_lccs_classification_systems_title_translations'), 'classification_systems',
                    ['title_translations'], unique=False, schema='lccs')
    op.drop_column('classification_systems', 'description', schema='lccs')

    op.add_column('classes', sa.Column('title_translations',
                                       postgresql.HSTORE(text_type=sa.Text()),
                                       nullable=True, comment='A human-readable string naming for class.'),
                  schema='lccs')
    op.add_column('classes', sa.Column('description_translations',
                                       postgresql.HSTORE(text_type=sa.Text()), nullable=True),
                  schema='lccs')

    session = Session(bind=op.get_bind())
    session.execute("UPDATE lccs.classes SET title_translations = hstore('pt-br', name);")
    session.execute("UPDATE lccs.classes SET description_translations = hstore('pt-br', description);")
    session.commit()

    result = session.execute("""SELECT id, (regexp_split_to_array(name, E'-|,|\\s+'))[1:3] FROM lccs.classes;""")

    for r in result:
        new_name = ''
        for size in range(len(r[1])):
            if str(r[1][size]):
                new_name += str(r[1][size])
        new_name = new_name.replace("'", '"')
        new_name = new_name.replace(" ", '-')
        new_name = new_name.replace(",", '-')
        new_name = new_name.replace("/", '-')
        new_name = new_name.replace("(", '-')
        new_name = new_name.replace(")", '-')
        new_name = new_name.replace(">50 %", '-')
        new_name = new_name.replace("50%", '-')
        new_name = new_name.replace("->", '-')
        new_name = new_name.replace("-<-", '-')
        new_name = new_name.replace("--", '-')
        new_name = new_name.replace("---", '-')

        split_strings = [new_name[index: index + 32] for index in range(0, len(new_name), 32)]

        sql = f"UPDATE lccs.classes AS cls SET name = '{split_strings[0].lower()}' WHERE cls.id = {r[0]};"
        session.execute(sql)
    session.commit()

    op.alter_column('classes', 'name',
                    existing_type=sa.VARCHAR(length=255),
                    type_=sa.String(length=32),
                    comment='Class name internally.',
                    existing_nullable=False,
                    schema='lccs')

    op.create_index(op.f('idx_lccs_classes_description_translations'), 'classes', ['description_translations'], unique=False, schema='lccs')
    op.create_index(op.f('idx_lccs_classes_title_translations'), 'classes', ['title_translations'], unique=False, schema='lccs')
    op.drop_column('classes', 'description', schema='lccs')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('classification_systems', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False), schema='lccs')
    op.drop_index(op.f('idx_lccs_classification_systems_title_translations'), table_name='classification_systems', schema='lccs')
    op.drop_index(op.f('idx_lccs_classification_systems_description_translations'), table_name='classification_systems', schema='lccs')
    op.alter_column('classification_systems', 'name',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='Classification System name internally.',
               existing_nullable=False,
               schema='lccs')

    session = Session(bind=op.get_bind())
    session.execute("UPDATE lccs.classification_systems SET name = title_translations -> 'pt-br' ;")
    session.execute("UPDATE lccs.classes SET description = description_translations -> 'pt-br';")
    session.commit()

    op.drop_column('classification_systems', 'description_translations', schema='lccs')
    op.drop_column('classification_systems', 'title_translations', schema='lccs')
    op.add_column('classes', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False), schema='lccs')
    op.drop_index(op.f('idx_lccs_classes_title_translations'), table_name='classes', schema='lccs')
    op.drop_index(op.f('idx_lccs_classes_description_translations'), table_name='classes', schema='lccs')
    op.alter_column('classes', 'name',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='Class name internally.',
               existing_nullable=False,
               schema='lccs')

    session = Session(bind=op.get_bind())
    session.execute("UPDATE lccs.classes SET name = title_translations -> 'pt-br' ;")
    session.execute("UPDATE lccs.classes SET description = description_translations -> 'pt-br';")
    session.commit()

    op.drop_column('classes', 'description_translations', schema='lccs')
    op.drop_column('classes', 'title_translations', schema='lccs')
    # ### end Alembic commands ###