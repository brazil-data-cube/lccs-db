"""system_lineage.

Revision ID: 83db828c55ad
Revises: 
Create Date: 2021-07-13 14:57:44.921242

"""
from alembic import op
import sqlalchemy as sa

from sqlalchemy.orm.session import Session
from lccs_db.models import LucClass, ClassesView

# revision identifiers, used by Alembic.
revision = '83db828c55ad'
down_revision = '803fd73df983'
branch_labels = ()
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    session = Session(bind=op.get_bind())
    session.execute('DROP VIEW {};'.format(ClassesView.__table__))
    session.commit()

    op.create_table('classification_systemSRC',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('classification_system_id', sa.Integer(), nullable=False),
    sa.Column('classification_system_src_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['classification_system_id'], ['lccs.classification_systems.id'], name=op.f(
                        'classification_systemSRC_classification_system_id_classification_systems_fkey'),
                                            onupdate='CASCADE', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['classification_system_src_id'], ['lccs.classification_systems.id'],
                                            name=op.f(
                                                'classification_systemSRC_classification_system_src_id_classification_systems_fkey'),
                                            onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('classification_system_id', 'classification_system_src_id', name=op.f('classification_systemSRC_pkey'))
    )
    op.create_table('transition_classes',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('source_class_id', sa.Integer(), nullable=False),
    sa.Column('target_class_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['source_class_id'], ['lccs.classes.id'],
                                            name=op.f('transition_classes_source_class_id_classes_fkey'),
                                            onupdate='CASCADE', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['target_class_id'], ['lccs.classes.id'],
                                            name=op.f('transition_classes_target_class_id_classes_fkey'),
                                            onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('source_class_id', 'target_class_id', name=op.f('transition_classes_pkey')),
    schema='lccs'
    )
    op.create_index(op.f('idx_lccs_transition_classes_source_class_id'), 'transition_classes', ['source_class_id'], unique=False, schema='lccs')
    op.create_index(op.f('idx_lccs_transition_classes_target_class_id'), 'transition_classes', ['target_class_id'], unique=False, schema='lccs')
    op.alter_column('classes', 'code',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False,
               schema='lccs')
    op.alter_column('classes', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False,
               schema='lccs')
    op.add_column('classification_systems', sa.Column('version_predecessor', sa.Integer(), nullable=True), schema='lccs')
    op.add_column('classification_systems', sa.Column('version_successor', sa.Integer(), nullable=True), schema='lccs')
    op.alter_column('classification_systems', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False,
               schema='lccs')
    op.alter_column('classification_systems', 'authority_name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False,
               schema='lccs')
    op.alter_column('classification_systems', 'version',
               existing_type=sa.TEXT(),
               type_=sa.String(length=3),
               existing_nullable=False,
               schema='lccs')
    op.create_foreign_key(op.f('classification_systems_version_predecessor_classification_systems_fkey'),
                          'classification_systems', 'classification_systems', ['version_predecessor'], ['id'],
                          source_schema='lccs', referent_schema='lccs', onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(op.f('classification_systems_version_successor_classification_systems_fkey'),
                          'classification_systems', 'classification_systems', ['version_successor'], ['id'],
                          source_schema='lccs', referent_schema='lccs', onupdate='CASCADE', ondelete='CASCADE')

    session.execute("CREATE OR REPLACE VIEW {} AS " \
                    "SELECT classes.id, classes.name, classes.description, classes.code, " \
                    "class_systems.name  AS class_system_name, " \
                    "parent_class.name AS class_parent_name " \
                    "FROM {} AS classes " \
                    "JOIN {} AS class_systems ON class_systems.id = classes.classification_system_id " \
                    "LEFT OUTER JOIN {} AS parent_class ON classes.class_parent_id = parent_class.id;".format(
        ClassesView.__table__, LucClass.__table__,
        'lccs.classification_systems', LucClass.__table__)
                    )
    session.commit()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    session = Session(bind=op.get_bind())
    session.execute('DROP VIEW {};'.format(ClassesView.__table__))
    session.commit()

    op.drop_constraint(op.f('classification_systems_version_successor_classification_systems_fkey'),
                       'classification_systems', schema='lccs', type_='foreignkey')
    op.drop_constraint(op.f('classification_systems_version_predecessor_classification_systems_fkey'),
                       'classification_systems', schema='lccs', type_='foreignkey')
    op.alter_column('classification_systems', 'version',
               existing_type=sa.String(length=3),
               type_=sa.TEXT(),
               existing_nullable=False,
               schema='lccs')
    op.alter_column('classification_systems', 'authority_name',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=False,
               schema='lccs')
    op.alter_column('classification_systems', 'name',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=False,
               schema='lccs')
    op.drop_column('classification_systems', 'version_successor', schema='lccs')
    op.drop_column('classification_systems', 'version_predecessor', schema='lccs')
    op.alter_column('classes', 'name',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=False,
               schema='lccs')
    op.alter_column('classes', 'code',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=False,
               schema='lccs')
    op.drop_index(op.f('idx_lccs_transition_classes_target_class_id'), table_name='transition_classes', schema='lccs')
    op.drop_index(op.f('idx_lccs_transition_classes_source_class_id'), table_name='transition_classes', schema='lccs')
    op.drop_table('transition_classes', schema='lccs')
    op.drop_table('classification_systemSRC')

    session.execute("CREATE OR REPLACE VIEW {} AS " \
                    "SELECT classes.id, classes.name, classes.description, classes.code, " \
                    "class_systems.name  AS class_system_name, " \
                    "parent_class.name AS class_parent_name " \
                    "FROM {} AS classes " \
                    "JOIN {} AS class_systems ON class_systems.id = classes.classification_system_id " \
                    "LEFT OUTER JOIN {} AS parent_class ON classes.class_parent_id = parent_class.id;".format(
        ClassesView.__table__, LucClass.__table__,
        'lccs.classification_systems', LucClass.__table__)
    )
    session.commit()

    # ### end Alembic commands ###
